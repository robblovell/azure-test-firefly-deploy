// Generated by CoffeeScript 1.10.0
(function() {
  var Vehicle, app, assert, createVehicle, expect, express, getMe, getMojioVehicle, getToken, getVehicle, nock, pathStub, proxyquire, ref, should;

  proxyquire = require('proxyquire');

  pathStub = {};

  should = require('should');

  assert = require('chai').assert;

  expect = require('chai').expect;

  express = require('express');

  nock = require('nock');

  Vehicle = require('../models/firefly/Vehicle').model;

  app = express();

  ref = require('../src/auth')(app), getToken = ref[0], getMe = ref[1], getVehicle = ref[2], getMojioVehicle = ref[3], createVehicle = ref[4];

  describe('Authorization Tests', function() {
    var results, token;
    token = {
      access_token: 'token'
    };
    results = {
      token: token
    };
    it('getToken should get a token', function(done) {
      (getToken !== null).should.be["true"];
      return getToken(token, function(error, result) {
        result.token.should.be.equal(token);
        done();
      });
    });
    it('getMe should get a user', function(done) {
      (getMe !== null).should.be["true"];
      nock('https://staging-api.moj.io').get("/v2/me").reply(function(uri, requestBody, cb) {
        cb(null, [
          200, JSON.stringify({
            Id: "id"
          })
        ]);
      });
      return getMe(results, function(error, result) {
        results.mojioUser.Id.should.be.equal("id");
        done();
      });
    });
    it('getVehicle should get a firefly vehicle-user object', function(done) {
      (getVehicle !== null).should.be["true"];
      results.mojioUser.Id.should.be.equal("id");
      Vehicle.find = function(query, callback) {
        console.log("find vehicle");
        return callback(null, [
          {
            _doc: {
              Id: 'vehicleId'
            },
            save: function(error, result) {
              console.log("save vehicle");
              callback(null);
              return this._doc._id = 'vehicleId';
            }
          }
        ]);
      };
      return getVehicle(results, function(error, result) {
        result.vehicles[0].Id.should.be.equal("vehicleId");
        done();
      });
    });
    it('getMojioVehicle should get a mojio vehicle', function(done) {
      (getMojioVehicle !== null).should.be["true"];
      nock('https://staging-api.moj.io').get("/v2/Vehicles").reply(function(uri, requestBody, cb) {
        cb(null, [
          200, JSON.stringify({
            Data: [
              {
                Id: "id"
              }
            ]
          })
        ]);
      });
      return getMojioVehicle(results, function(error, result) {
        results.mojioVehicles[0].Id.should.be.equal("id");
        done();
      });
    });
    it('createVehicle should get create a firefly vehicle', function(done) {
      (createVehicle !== null).should.be["true"];
      Vehicle.prototype.save = function(callback) {
        console.log("save vehicle");
        callback(null);
        return this._doc._id = 'vehicleId';
      };
      return createVehicle(results, function(error, result) {
        var vehicle;
        vehicle = results.vehicles[0];
        vehicle.Id.should.be.equal("vehicleId");
        done();
      });
    });
    return it('getMojioVehicle should return no mojio vehicle', function(done) {
      (getMojioVehicle !== null).should.be["true"];
      nock('https://staging-api.moj.io').get("/v2/Vehicles").reply(function(uri, requestBody, cb) {
        cb(null, [
          200, JSON.stringify({
            Data: []
          })
        ]);
      });
      return getMojioVehicle(results, function(error, result) {
        results.mojioVehicles.length.should.be.equal(0);
        done();
      });
    });
  });

}).call(this);

//# sourceMappingURL=Auth_Tests.js.map
